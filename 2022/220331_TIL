to do
1. 객체지향프로그래밍 강의
2. 모바일플랫폼 팀플 조사

객체지향프로그래밍 3-2 강의

1. 일차원 배열
일차원 배열은 연관된 변수들의 리스트
형식 type var_name[size];
type:배열의 기본 자료형
var_name:배열의 이름
size:원소의 개수를
예)int sample[10];
C++에서 모든 배열은 첫 번째 원소의 첨자로 0을 갖는다.
C++에서 모든 배열은 인접한 메모리 위치로 구성된다.

배열의 크기
총 바이트 수 = 자료형의 바이트 수 * 원소의 수

하나의 배열을 다른 배열에 치환할 수 없다
int a[10], b[10];
a=b; // 에러

배열의 경계 확인하지 않음
C++는 배열의 경계 확인하지 않는다.
크기가 n인 배열에서 n이상으로 인덱스 할 수 있다.
이것은 프로그램의 충돌을 야기할 수 있다.
프로그램이 요구하는 만큼의 충분히 큰 배열을 선언하고 필요할 때마다 경계 확인을 하는 것은 프로그래머의 책임이다.

2. 문자열(string)
C++에는 2가지 방법
- C-스트링(C에서의 문자열 처리방식) - 아래 설명
- C++ string 클래스의 객체 - 문자열 클래스의 사용(자바언어 방식)
큰 따옴표로 둘러 쌓인 문자들의 리스트
널(null)로 끝나는 문자 배열
 널 문자는 '\0'으로 표시하고 그 값은 0
널 종료 문자 때문에 최대 문자열보다 1 문자 더 길게 선언되어야 함
문자열 리터럴의 예
 char str[6]="Hello";
  H e l l o '\0'
 널을 직접 추가할 필요가 없으며, 컴파일러가 자동 생성한다.

3. 몇 가지 문자열 라이브러리 함수
strcpy
 strcpy(to, from);
 from 문자열의 내용을 to로 복사
strcat 
 strcat(s1,s2);
 s2를 s1의 끝에 붙이며, s2는 변하지 않는다.
strcmp 
 strcmp(s1,s2);
 두 개의 문자열을 비교하여 같으면 0을 반환한다. 만약 s1이 s2보다 크다면
 양수가 반환되고, s2보다 작다면 음수가 반환된다.
strlen
 strlen(s);
 s가 가리키는 문자열의 길이를 반환한다.

4. 이차원 배열
 일 차원 배열들의 리스트
 배열의 크기
  행의 수 X 열의 수 X 자료형의 바이트 수

5. 다차원 배열
3차원 이상의 배열은 이를 저장할 메모리의 양 때문에 거의 사용되지 않는다.
 배열 원소들을 위한 공간은 배열이 존재할 동안 내내 할당되어 있기 때문이다.
예) int multidim[4][10][3];

6. 배열의 초기화
형식 type-specifier array_name[size] = {value-list};
value-list는 배열의 자료형과 일치하는 값들의 리스트이며, 콤마로 구분

예) int i[10] = {1,2,3,4,5,6,7,8,9,10};
문자열을 저장하는 문자 배열
char array_name[size] = "string";
예)
    char str[6] = "hello";
    char str[6] = {'h','e','l','l','o','\0'};

가변 길이의 배열 초기화
배열의 초기화 문장이 배열의 크기를 명시하지 않으면 C++가 자동으로 초기값을 충분히 저장할 수 있는 크기의 배열을 생성
예)
    char e1[] = "Divide by 0\n";
    char e2[] = "End-of-File\n";
    char e3[] = "Access Denied\n";
다차원 배열에 대해서는 맨 왼쪽 차원을 제외한 모든 차원을 명시해야만 한다.
예)
    int sqrs[][2] ={1,1,
                    2,4,
                    3,9};
